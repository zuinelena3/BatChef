% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/BatChefParams.R, R/Classes.R
\docType{class}
\name{LimmaParams}
\alias{LimmaParams}
\alias{CombatParams}
\alias{SeuratV3Params}
\alias{SeuratV5Params}
\alias{FastMNNParams}
\alias{HarmonyParams}
\alias{ScMerge2Params}
\alias{LigerParams}
\alias{BatChefParams-class}
\alias{LimmaParams-class}
\alias{CombatParams-class}
\alias{SeuratV3Params-class}
\alias{SeuratV5Params-class}
\alias{FastMNNParams-class}
\alias{HarmonyParams-class}
\alias{ScanoramaParams-class}
\alias{SCVIParams-class}
\alias{ScMerge2Params-class}
\alias{BBKNNParams-class}
\alias{LigerParams-class}
\title{BatChefParams methods}
\usage{
LimmaParams(assay_type = "logcounts", ...)

CombatParams(assay_type = "counts", ...)

SeuratV3Params(
  features,
  pca_name = NULL,
  assay = NULL,
  reference = NULL,
  anchor_features = 2000,
  scale = TRUE,
  normalization_method = "LogNormalize",
  sct_clip_range = NULL,
  reduction = "cca",
  l2_norm = TRUE,
  dims = 1:30,
  k_anchor = 5,
  k_filter = 200,
  k_score = 30,
  max_features = 200,
  nn_method = "annoy",
  n_trees = 50,
  eps = 0,
  verbose = FALSE,
  new_assay_name = "integrated",
  features_to_integrate = NULL,
  k_weight = 100,
  weight_reduction = NULL,
  sd_weight = 1,
  sample_tree = NULL,
  preserve_order = FALSE
)

SeuratV5Params(
  pca_name = NULL,
  method = "CCAIntegration",
  orig_reduction = "pca",
  assay = NULL,
  features = NULL,
  layers = NULL,
  scale_layer = "scale.data",
  new_reduction = "integrated.dr",
  reference = NULL,
  normalization_method = "LogNormalize",
  dims = 1:30,
  k_filter = NA,
  dims_to_integrate = NULL,
  k_weight = 100,
  weight_reduction = NULL,
  sd_weight = 1,
  sample_tree = NULL,
  preserve_order = FALSE,
  verbose = FALSE,
  l2_norm = TRUE,
  k_anchor = 5,
  k_score = 30,
  max_features = 200,
  nn_method = "annoy",
  n_trees = 50,
  eps = 0
)

FastMNNParams(...)

HarmonyParams(...)

ScMerge2Params(assay_type = "logcounts", ...)

LigerParams(features, method = "iNMF", ...)
}
\arguments{
\item{assay_type}{A string specifying the assay to use for correction.}

\item{...}{Named arguments to pass to individual methods upon dispatch.}

\item{features}{Vector of features to use.}

\item{pca_name}{A string specifying the PCA name.}

\item{assay}{Name of assay for integration.}

\item{reference}{A reference Seurat object.}

\item{anchor_features}{Number of features to be used in anchor finding.}

\item{scale}{A logical to scale the features provided.}

\item{normalization_method}{Name of normalization method used:
LogNormalize or SCT.}

\item{sct_clip_range}{Numeric of length two specifying the min and max values
the Pearson residual will be clipped to.}

\item{reduction}{Dimensional reduction to perform when finding anchors.}

\item{l2_norm}{Perform L2 normalization on the CCA cell embeddings
after dimensional reduction.}

\item{dims}{Number of dimensions of dimensional reduction.}

\item{k_anchor}{Number of neighbors (k) to use when picking anchors.}

\item{k_filter}{Number of anchors to filter.}

\item{k_score}{Number of neighbors (k) to use when scoring anchors.}

\item{max_features}{The maximum number of features to use when specifying
the neighborhood search space in the anchor filtering.}

\item{nn_method}{Method for nearest neighbor finding.}

\item{n_trees}{More trees gives higher precision when using annoy
approximate nearest neighbor search.}

\item{eps}{Error bound on the neighbor finding algorithm.}

\item{verbose}{Print progress bars and output.}

\item{new_assay_name}{Name for the new assay containing the integrated data.}

\item{features_to_integrate}{Vector of features to integrate.}

\item{k_weight}{Number of neighbors to consider when weighting anchors.}

\item{weight_reduction}{Dimension reduction to use when calculating
anchor weights.}

\item{sd_weight}{Controls the bandwidth of the Gaussian kernel for weighting.}

\item{sample_tree}{Specify the order of integration.}

\item{preserve_order}{Do not reorder objects based on size for each pairwise
integration.}

\item{method}{iNMF variant algorithm to use for integration.}

\item{orig_reduction}{Name of dimensional reduction for correction.}

\item{layers}{Names of normalized layers in assay.}

\item{scale_layer}{Name(s) of scaled layer(s) in assay.}

\item{new_reduction}{Name of new integrated dimensional reduction.}

\item{dims_to_integrate}{Number of dimensions to return integrated values for.}
}
\value{
A BatChefParams object of the specified subclass, containing parameter
settings for the corresponding batch correction method.
}
\description{
Constructors and methods for the params parameter classes.
BatChefParams objects contain method specific parameters
to pass to the batchCorrect generic.
}
