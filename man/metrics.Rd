% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/metrics.R
\name{metrics}
\alias{metrics}
\title{Performance evaluation metrics.}
\usage{
metrics(
  input,
  batch,
  group,
  reduction,
  rep = 10,
  mc_cores = 1,
  nmi_compute = TRUE,
  resolution = NULL,
  k = 10,
  metric = "euclidean",
  variant = "sum",
  meta_data = colData(input),
  perplexity = 30,
  nn_eps = 0
)
}
\arguments{
\item{input}{A \link[SingleCellExperiment]{SingleCellExperiment}
\link[Seurat]{Seurat} or `AnnData` object can be supplied.}

\item{batch}{A string specifying the batch variable.}

\item{group}{A string specifying the ground truth labels.}

\item{reduction}{A string specifying the dimensional reduction.
on which the clustering analysis will be performed.}

\item{rep}{Number of times the Wasserstein distance is calculated.}

\item{mc_cores}{The number of cores to use.}

\item{nmi_compute}{A Boolean value indicating NMI metric calculation to
identify the optimal clustering is to be performed (Default: TRUE).}

\item{resolution}{A numeric value specifying the resolution parameter.}

\item{k}{An integer scalar specifying the number of nearest neighbors.}

\item{metric}{The metric to use when calculating distance between instances.}

\item{variant}{How to compute the normalizer in the denominator.}

\item{meta_data}{A data frame with one row per cell.}

\item{perplexity}{The effective number of each cell's neighbors.}

\item{nn_eps}{Error bound for nearest neighbor search with `RANN:nn2()`.}
}
\value{
A data.frame object
}
\description{
Performance evaluation metrics: Wasserstein distance, Local Inverse Simpson's
Index, Average Silhouette Width, Adjusted Rand Index, and
Normalized Mutual Information.
}
\details{
This function performs Leiden clustering before computing the evaluation
metrics.
}
\examples{
sim <- simulate_data(n_genes = 1000, batch_cells = c(150, 110),
                     group_prob = c(0.5, 0.5), n_hvgs = 500,
                     compute_pca = TRUE, output_format = "SingleCellExperiment")
metrics <- metrics(input = sim, batch = "Batch", group = "Group",
                   reduction = "PCA", rep = 5)

}
